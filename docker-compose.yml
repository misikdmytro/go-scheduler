version: '3'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - 4001:4001
    environment:
      - GIN_MODE=release
    volumes:
      - ./docker.yml:/out/config.yml

  postgres:
    image: postgres:15
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "username"]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - ./sql:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/db
      - FLYWAY_USER=username
      - FLYWAY_PASSWORD=password
      - FLYWAY_SCHEMAS=public
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql
    command: info repair migrate validate

  rabbitmq:
    image: rabbitmq:3.8-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080

volumes:
  db-data:
  rabbitmq-data:
